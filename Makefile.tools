.PHONY: prepare-env-%
prepare-env-%: gopath ginkgo-cli golangci-lint kustomize
	PATH=$$GOPATH/bin:/usr/local/kubebuilder-$*/bin:/usr/local/opt/kubebuilder-$*/bin:$$PATH make kubebuilder-tools-$*
	PATH=$$GOPATH/bin:/usr/local/kubebuilder-$*/bin:/usr/local/opt/kubebuilder-$*/bin:$$PATH ./configure

.PHONY: gopath
gopath:
	@ if [ ! -d $$GOPATH ]; then \
		mkdir -p $$GOPATH; \
	fi
	@ if [ ! -d $$GOPATH/bin ]; then \
		mkdir -p $$GOPATH/bin; \
	fi

.PHONY: ginkgo-cli
ginkgo-cli:
	@ if [ ! $$(which ginkgo) ]; then \
	 		go get -u github.com/onsi/ginkgo/ginkgo; \
	fi

.PHONY: golangci-lint
golangci-lint:
	@ if [ ! $$(which golangci-lint) ]; then \
		curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $$(go env GOPATH)/bin v1.15.0; \
	fi

.PHONY: kustomize
kustomize:
	@ if [ ! $$(which kustomize) ]; then \
	 	go get -u sigs.k8s.io/kustomize/kustomize/v3; \
	fi

kubernetes_version ?= 1.29.0
kubebuilder_folder=kubebuilder
kubernetes_version_folder=$(kubebuilder_folder)/$(kubernetes_version)
kubebuilder_file=$(kubebuilder_folder)_$(kubernetes_version).tar.gz

export TEST_ASSET_DIR=$(CURDIR)/${kubernetes_version_folder}/bin

.PHONY: install-kubebuilder-tools
install-kubebuilder-tools:
	@echo "Downloading kubebuilder tools for Kubernetes $(kubernetes_version)..."
	@curl -sSLo $(kubebuilder_file) "https://storage.googleapis.com/kubebuilder-tools/kubebuilder-tools-${kubernetes_version}-${OS}-${ARCH}.tar.gz"
	@mkdir -p $(kubernetes_version_folder)
	@tar -zxvf $(kubebuilder_file) --strip-components=1 -C $(kubernetes_version_folder)
	@rm $(kubebuilder_file)
	@chmod +x $(TEST_ASSET_DIR)/etcd $(TEST_ASSET_DIR)/kube-apiserver $(TEST_ASSET_DIR)/kubectl
